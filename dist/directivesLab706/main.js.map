{"version":3,"sources":["./src/app/to-do-list/to-do-list.component.ts","./src/app/to-do-list/to-do-list.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/task/task.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from '../classes/task/task';\n\n@Component({\n  selector: 'app-to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n\n  tasks: Task[] = [];\n  newTask: string = \"\";\n  hide: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addItem(): void {\n    this.tasks.push(new Task(this.newTask, false, false));\n    this.newTask = \"\";\n\n  }\n\n  deleteItem(i: number) {\n    this.tasks.splice(i,1);\n  }\n\n  markAsCompleted(i: number) {\n    this.tasks[i].setisCompleted(!this.tasks[i].getIsCompleted());\n  }\n\n  markAsPostponed(i: number) {\n    this.tasks[i].setisPostponed(!this.tasks[i].getIsPostponed());\n\n  }\n\n  hidePostponed() {\n\n    this.hide = !this.hide;\n\n  }\n\n  checkPostponed(i:number) {\n\n    return this.tasks[i].getIsPostponed() && this.hide;\n\n  }\n\n  removeCompleted() {\n\n    for(var i= 0; i < this.tasks.length; i++) {\n      if(this.tasks[i].getIsCompleted() == true) {\n          this.tasks.splice(i, 1);\n          i--;\n      }\n    }\n\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n\n<div class=\"flex flex-col justify-center items-center\">\n  <h1 [ngClass]=\"{'text-4xl':true, 'font-sans':true, 'text-green-800':true, 'm-2':true, 'text-center':true}\">To-do List\n  </h1>\n\n  <div class=\"w-full flex flex-row justify-center items-center\">\n    <input id=\"newTask\" placeholder=\"Add Item\" type=\"text\" [(ngModel)]=\"newTask\" class=\"w-1/2 py-1\">\n    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded m-4\" (click)=\"addItem()\">Add\n      item</button>\n  </div>\n  <div *ngFor=\"let item of tasks; let i = index\" class=\"w-full flex flex-col justify-center items-center min-h-full\">\n    <div *ngIf=\"!checkPostponed(i)\" class=\"flex-row flex m-0.5 p-2 sm:w-2/3 w-full h-auto text-left items-center\">\n\n      <div\n        [ngClass]=\"{'bg-blue-400':!item.getIsCompleted(), 'bg-green-400':item.getIsCompleted(), 'mr-0':true, 'p-2':true,'rounded-l-md':true, 'w-9/12':true, 'h-auto':true, 'text-base':true}\">\n        <p><i class=\"material-icons align-middle pr-2\">work</i>{{item.gettaskTitle()}}</p>\n      </div>\n      <div class=\"w-1/12 p-2 bg-green-400 hover:bg-green-500 text-center\" (click)=\"markAsCompleted(i)\"><i class=\"material-icons align-middle text-base text-gray-100\">check_circle</i></div>\n      <div class=\"w-1/12 p-2 bg-yellow-200 hover:bg-yellow-300 text-center\" (click)=\"markAsPostponed(i)\"><i class=\"material-icons align-middle text-base text-gray-100\">alarm_off</i></div>\n      <div class=\"w-1/12 p-2 rounded-r-md bg-red-500 hover:bg-red-600 text-center\" (click)=\"deleteItem(i)\"><i class=\"material-icons align-middle text-base text-gray-100\">delete</i></div>\n    </div>\n  </div>\n  <div *ngIf=\"tasks.length >0\" class=\"flex flex-row\">\n\n    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-4\"\n      (click)=\"hidePostponed()\">Hide/ShowPostponed</button>\n    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-4\"\n      (click)=\"removeCompleted()\">Remove Completed</button>\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'directivesLab706';\n}\n","<app-to-do-list></app-to-do-list>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ToDoListComponent } from './to-do-list/to-do-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Task {\n\n    constructor(private taskTitle: string,\n        private isCompleted: boolean,\n        private isPostponed: boolean) { }\n\n\n\n    public gettaskTitle(): string {\n        return this.taskTitle;\n    }\n\n    public settaskTitle(taskTitle: string): void {\n        this.taskTitle = taskTitle;\n    }\n\n    public getIsCompleted(): boolean {\n        return this.isCompleted;\n    }\n\n    public setisCompleted(isCompleted: boolean): void {\n        this.isCompleted = isCompleted;\n    }\n\n    public getIsPostponed(): boolean {\n        return this.isPostponed;\n    }\n\n    public setisPostponed(isPostponed: boolean): void {\n        this.isPostponed = isPostponed;\n    }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}